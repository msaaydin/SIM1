//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25769353
// Cuda compilation tools, release 10.1, V10.1.105
// Based on LLVM 3.4svn
//

.version 7.4
.target sm_61
.address_size 64

	// .globl	_Z30cudaMatrixCompareAndBinarise_GPddii
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
;
// _ZZ12reduceSmemV2PKdPdjE4smem has been demoted
// _ZZ15MatrixMulKernelPdS_S_iE3Mds has been demoted
// _ZZ15MatrixMulKernelPdS_S_iE3Nds has been demoted
.extern .shared .align 8 .b8 sdata[];

.visible .entry _Z30cudaMatrixCompareAndBinarise_GPddii(
	.param .u64 _Z30cudaMatrixCompareAndBinarise_GPddii_param_0,
	.param .f64 _Z30cudaMatrixCompareAndBinarise_GPddii_param_1,
	.param .u32 _Z30cudaMatrixCompareAndBinarise_GPddii_param_2,
	.param .u32 _Z30cudaMatrixCompareAndBinarise_GPddii_param_3
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [_Z30cudaMatrixCompareAndBinarise_GPddii_param_0];
	ld.param.f64 	%fd1, [_Z30cudaMatrixCompareAndBinarise_GPddii_param_1];
	ld.param.u32 	%r2, [_Z30cudaMatrixCompareAndBinarise_GPddii_param_2];
	ld.param.u32 	%r3, [_Z30cudaMatrixCompareAndBinarise_GPddii_param_3];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mad.lo.s32 	%r1, %r11, %r2, %r7;
	setp.ge.u32	%p1, %r7, %r2;
	setp.ge.u32	%p2, %r11, %r3;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB0_4;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.u32 	%rd4, %r1, 8;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f64 	%fd2, [%rd1];
	setp.gt.f64	%p4, %fd2, %fd1;
	@%p4 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_3:
	mov.u64 	%rd6, 4607182418800017408;
	st.global.u64 	[%rd1], %rd6;
	bra.uni 	BB0_4;

BB0_2:
	mov.u64 	%rd5, 0;
	st.global.u64 	[%rd1], %rd5;

BB0_4:
	ret;
}

	// .globl	_Z30cudaMatrixCompareAndBinarise_LPddii
.visible .entry _Z30cudaMatrixCompareAndBinarise_LPddii(
	.param .u64 _Z30cudaMatrixCompareAndBinarise_LPddii_param_0,
	.param .f64 _Z30cudaMatrixCompareAndBinarise_LPddii_param_1,
	.param .u32 _Z30cudaMatrixCompareAndBinarise_LPddii_param_2,
	.param .u32 _Z30cudaMatrixCompareAndBinarise_LPddii_param_3
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [_Z30cudaMatrixCompareAndBinarise_LPddii_param_0];
	ld.param.f64 	%fd1, [_Z30cudaMatrixCompareAndBinarise_LPddii_param_1];
	ld.param.u32 	%r2, [_Z30cudaMatrixCompareAndBinarise_LPddii_param_2];
	ld.param.u32 	%r3, [_Z30cudaMatrixCompareAndBinarise_LPddii_param_3];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mad.lo.s32 	%r1, %r11, %r2, %r7;
	setp.ge.u32	%p1, %r7, %r2;
	setp.ge.u32	%p2, %r11, %r3;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB1_4;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.u32 	%rd4, %r1, 8;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f64 	%fd2, [%rd1];
	setp.lt.f64	%p4, %fd2, %fd1;
	@%p4 bra 	BB1_3;
	bra.uni 	BB1_2;

BB1_3:
	mov.u64 	%rd6, 4607182418800017408;
	st.global.u64 	[%rd1], %rd6;
	bra.uni 	BB1_4;

BB1_2:
	mov.u64 	%rd5, 0;
	st.global.u64 	[%rd1], %rd5;

BB1_4:
	ret;
}

	// .globl	_Z12sumMatrixGPUPKdS0_Pdii
.visible .entry _Z12sumMatrixGPUPKdS0_Pdii(
	.param .u64 _Z12sumMatrixGPUPKdS0_Pdii_param_0,
	.param .u64 _Z12sumMatrixGPUPKdS0_Pdii_param_1,
	.param .u64 _Z12sumMatrixGPUPKdS0_Pdii_param_2,
	.param .u32 _Z12sumMatrixGPUPKdS0_Pdii_param_3,
	.param .u32 _Z12sumMatrixGPUPKdS0_Pdii_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z12sumMatrixGPUPKdS0_Pdii_param_0];
	ld.param.u64 	%rd2, [_Z12sumMatrixGPUPKdS0_Pdii_param_1];
	ld.param.u64 	%rd3, [_Z12sumMatrixGPUPKdS0_Pdii_param_2];
	ld.param.u32 	%r2, [_Z12sumMatrixGPUPKdS0_Pdii_param_3];
	ld.param.u32 	%r3, [_Z12sumMatrixGPUPKdS0_Pdii_param_4];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mad.lo.s32 	%r1, %r11, %r2, %r7;
	setp.ge.u32	%p1, %r7, %r2;
	setp.ge.u32	%p2, %r11, %r3;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB2_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.u32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f64 	%fd1, [%rd8];
	ld.global.f64 	%fd2, [%rd6];
	add.f64 	%fd3, %fd2, %fd1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f64 	[%rd10], %fd3;

BB2_2:
	ret;
}

	// .globl	_Z21pointProductMatrixGPUPKdS0_Pdii
.visible .entry _Z21pointProductMatrixGPUPKdS0_Pdii(
	.param .u64 _Z21pointProductMatrixGPUPKdS0_Pdii_param_0,
	.param .u64 _Z21pointProductMatrixGPUPKdS0_Pdii_param_1,
	.param .u64 _Z21pointProductMatrixGPUPKdS0_Pdii_param_2,
	.param .u32 _Z21pointProductMatrixGPUPKdS0_Pdii_param_3,
	.param .u32 _Z21pointProductMatrixGPUPKdS0_Pdii_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z21pointProductMatrixGPUPKdS0_Pdii_param_0];
	ld.param.u64 	%rd2, [_Z21pointProductMatrixGPUPKdS0_Pdii_param_1];
	ld.param.u64 	%rd3, [_Z21pointProductMatrixGPUPKdS0_Pdii_param_2];
	ld.param.u32 	%r2, [_Z21pointProductMatrixGPUPKdS0_Pdii_param_3];
	ld.param.u32 	%r3, [_Z21pointProductMatrixGPUPKdS0_Pdii_param_4];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mad.lo.s32 	%r1, %r11, %r2, %r7;
	setp.ge.u32	%p1, %r7, %r2;
	setp.ge.u32	%p2, %r11, %r3;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB3_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.u32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f64 	%fd1, [%rd8];
	ld.global.f64 	%fd2, [%rd6];
	mul.f64 	%fd3, %fd2, %fd1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f64 	[%rd10], %fd3;

BB3_2:
	ret;
}

	// .globl	_Z21matrixProductConstGPUPKddPdii
.visible .entry _Z21matrixProductConstGPUPKddPdii(
	.param .u64 _Z21matrixProductConstGPUPKddPdii_param_0,
	.param .f64 _Z21matrixProductConstGPUPKddPdii_param_1,
	.param .u64 _Z21matrixProductConstGPUPKddPdii_param_2,
	.param .u32 _Z21matrixProductConstGPUPKddPdii_param_3,
	.param .u32 _Z21matrixProductConstGPUPKddPdii_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [_Z21matrixProductConstGPUPKddPdii_param_0];
	ld.param.f64 	%fd1, [_Z21matrixProductConstGPUPKddPdii_param_1];
	ld.param.u64 	%rd2, [_Z21matrixProductConstGPUPKddPdii_param_2];
	ld.param.u32 	%r2, [_Z21matrixProductConstGPUPKddPdii_param_3];
	ld.param.u32 	%r3, [_Z21matrixProductConstGPUPKddPdii_param_4];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mad.lo.s32 	%r1, %r11, %r2, %r7;
	setp.ge.u32	%p1, %r7, %r2;
	setp.ge.u32	%p2, %r11, %r3;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB4_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.u32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd2, [%rd5];
	mul.f64 	%fd3, %fd2, %fd1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f64 	[%rd7], %fd3;

BB4_2:
	ret;
}

	// .globl	_Z21matrixCalculatePowGPUPKddPdii
.visible .entry _Z21matrixCalculatePowGPUPKddPdii(
	.param .u64 _Z21matrixCalculatePowGPUPKddPdii_param_0,
	.param .f64 _Z21matrixCalculatePowGPUPKddPdii_param_1,
	.param .u64 _Z21matrixCalculatePowGPUPKddPdii_param_2,
	.param .u32 _Z21matrixCalculatePowGPUPKddPdii_param_3,
	.param .u32 _Z21matrixCalculatePowGPUPKddPdii_param_4
)
{
	.reg .pred 	%p<28>;
	.reg .b32 	%r<51>;
	.reg .f64 	%fd<20>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd1, [_Z21matrixCalculatePowGPUPKddPdii_param_0];
	ld.param.f64 	%fd13, [_Z21matrixCalculatePowGPUPKddPdii_param_1];
	ld.param.u64 	%rd2, [_Z21matrixCalculatePowGPUPKddPdii_param_2];
	ld.param.u32 	%r4, [_Z21matrixCalculatePowGPUPKddPdii_param_3];
	ld.param.u32 	%r5, [_Z21matrixCalculatePowGPUPKddPdii_param_4];
	mov.u32 	%r6, %tid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r6;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r13, %r10, %r11, %r12;
	mad.lo.s32 	%r1, %r13, %r4, %r9;
	setp.ge.u32	%p2, %r9, %r4;
	setp.ge.u32	%p3, %r13, %r5;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB5_19;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.u32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd13;
	}
	bfe.u32 	%r14, %r3, 20, 11;
	add.s32 	%r15, %r14, -1012;
	mov.b64 	 %rd6, %fd13;
	shl.b64 	%rd7, %rd6, %r15;
	setp.ne.s64	%p5, %rd7, -9223372036854775808;
	setp.eq.s64	%p6, %rd7, -9223372036854775808;
	abs.f64 	%fd2, %fd1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd2;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd13;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd8, [retval0+0];
	
	//{
	}// Callseq End 0
	setp.gt.s32	%p7, %r2, -1;
	setp.lt.s32	%p8, %r2, 0;
	and.pred  	%p1, %p8, %p6;
	or.pred  	%p9, %p7, %p5;
	@%p9 bra 	BB5_3;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r16}, %fd8;
	}
	xor.b32  	%r17, %r16, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r18, %temp}, %fd8;
	}
	mov.b64 	%fd8, {%r18, %r17};

BB5_3:
	setp.eq.f64	%p10, %fd1, 0d0000000000000000;
	@%p10 bra 	BB5_6;
	bra.uni 	BB5_4;

BB5_6:
	bfe.u32 	%r19, %r3, 20, 11;
	add.s32 	%r20, %r19, -1012;
	shl.b64 	%rd9, %rd6, %r20;
	setp.eq.s64	%p13, %rd9, -9223372036854775808;
	selp.b32	%r21, %r2, 0, %p13;
	mov.u32 	%r22, 0;
	or.b32  	%r23, %r21, 2146435072;
	setp.lt.s32	%p14, %r3, 0;
	selp.b32	%r24, %r23, %r21, %p14;
	mov.b64 	%fd8, {%r22, %r24};
	bra.uni 	BB5_7;

BB5_4:
	@%p7 bra 	BB5_7;

	cvt.rzi.f64.f64	%fd14, %fd13;
	setp.neu.f64	%p12, %fd14, %fd13;
	selp.f64	%fd8, 0dFFF8000000000000, %fd8, %p12;

BB5_7:
	add.f64 	%fd19, %fd1, %fd13;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r25}, %fd19;
	}
	and.b32  	%r26, %r25, 2146435072;
	setp.ne.s32	%p15, %r26, 2146435072;
	@%p15 bra 	BB5_8;

	setp.gtu.f64	%p16, %fd2, 0d7FF0000000000000;
	@%p16 bra 	BB5_18;

	abs.f64 	%fd15, %fd13;
	setp.gtu.f64	%p17, %fd15, 0d7FF0000000000000;
	@%p17 bra 	BB5_18;

	and.b32  	%r27, %r3, 2147483647;
	setp.ne.s32	%p18, %r27, 2146435072;
	@%p18 bra 	BB5_13;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r28, %temp}, %fd13;
	}
	setp.eq.s32	%p19, %r28, 0;
	@%p19 bra 	BB5_17;

BB5_13:
	and.b32  	%r29, %r2, 2147483647;
	setp.ne.s32	%p20, %r29, 2146435072;
	@%p20 bra 	BB5_14;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r30, %temp}, %fd1;
	}
	setp.ne.s32	%p21, %r30, 0;
	mov.f64 	%fd19, %fd8;
	@%p21 bra 	BB5_18;

	shr.s32 	%r31, %r3, 31;
	and.b32  	%r32, %r31, -2146435072;
	add.s32 	%r33, %r32, 2146435072;
	or.b32  	%r34, %r33, -2147483648;
	selp.b32	%r35, %r34, %r33, %p1;
	mov.u32 	%r36, 0;
	mov.b64 	%fd19, {%r36, %r35};
	bra.uni 	BB5_18;

BB5_8:
	mov.f64 	%fd19, %fd8;

BB5_18:
	setp.eq.f64	%p25, %fd13, 0d0000000000000000;
	setp.eq.f64	%p26, %fd1, 0d3FF0000000000000;
	or.pred  	%p27, %p26, %p25;
	selp.f64	%fd16, 0d3FF0000000000000, %fd19, %p27;
	cvta.to.global.u64 	%rd10, %rd2;
	add.s64 	%rd12, %rd10, %rd4;
	st.global.f64 	[%rd12], %fd16;

BB5_19:
	ret;

BB5_14:
	mov.f64 	%fd19, %fd8;
	bra.uni 	BB5_18;

BB5_17:
	setp.gt.f64	%p22, %fd2, 0d3FF0000000000000;
	selp.b32	%r37, 2146435072, 0, %p22;
	mov.u32 	%r38, 0;
	xor.b32  	%r39, %r37, 2146435072;
	setp.lt.s32	%p23, %r3, 0;
	selp.b32	%r40, %r39, %r37, %p23;
	setp.eq.f64	%p24, %fd1, 0dBFF0000000000000;
	selp.b32	%r41, 1072693248, %r40, %p24;
	mov.b64 	%fd19, {%r38, %r41};
	bra.uni 	BB5_18;
}

	// .globl	_Z28matrixCalculatePowAndMultGPUPKdddPdii
.visible .entry _Z28matrixCalculatePowAndMultGPUPKdddPdii(
	.param .u64 _Z28matrixCalculatePowAndMultGPUPKdddPdii_param_0,
	.param .f64 _Z28matrixCalculatePowAndMultGPUPKdddPdii_param_1,
	.param .f64 _Z28matrixCalculatePowAndMultGPUPKdddPdii_param_2,
	.param .u64 _Z28matrixCalculatePowAndMultGPUPKdddPdii_param_3,
	.param .u32 _Z28matrixCalculatePowAndMultGPUPKdddPdii_param_4,
	.param .u32 _Z28matrixCalculatePowAndMultGPUPKdddPdii_param_5
)
{
	.reg .pred 	%p<28>;
	.reg .b32 	%r<51>;
	.reg .f64 	%fd<22>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd1, [_Z28matrixCalculatePowAndMultGPUPKdddPdii_param_0];
	ld.param.f64 	%fd13, [_Z28matrixCalculatePowAndMultGPUPKdddPdii_param_1];
	ld.param.f64 	%fd14, [_Z28matrixCalculatePowAndMultGPUPKdddPdii_param_2];
	ld.param.u64 	%rd2, [_Z28matrixCalculatePowAndMultGPUPKdddPdii_param_3];
	ld.param.u32 	%r4, [_Z28matrixCalculatePowAndMultGPUPKdddPdii_param_4];
	ld.param.u32 	%r5, [_Z28matrixCalculatePowAndMultGPUPKdddPdii_param_5];
	mov.u32 	%r6, %tid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r6;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r13, %r10, %r11, %r12;
	mad.lo.s32 	%r1, %r13, %r4, %r9;
	setp.ge.u32	%p2, %r9, %r4;
	setp.ge.u32	%p3, %r13, %r5;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB6_19;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.u32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd13;
	}
	bfe.u32 	%r14, %r3, 20, 11;
	add.s32 	%r15, %r14, -1012;
	mov.b64 	 %rd6, %fd13;
	shl.b64 	%rd7, %rd6, %r15;
	setp.ne.s64	%p5, %rd7, -9223372036854775808;
	setp.eq.s64	%p6, %rd7, -9223372036854775808;
	abs.f64 	%fd2, %fd1;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd2;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd13;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd8, [retval0+0];
	
	//{
	}// Callseq End 1
	setp.gt.s32	%p7, %r2, -1;
	setp.lt.s32	%p8, %r2, 0;
	and.pred  	%p1, %p8, %p6;
	or.pred  	%p9, %p7, %p5;
	@%p9 bra 	BB6_3;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r16}, %fd8;
	}
	xor.b32  	%r17, %r16, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r18, %temp}, %fd8;
	}
	mov.b64 	%fd8, {%r18, %r17};

BB6_3:
	setp.eq.f64	%p10, %fd1, 0d0000000000000000;
	@%p10 bra 	BB6_6;
	bra.uni 	BB6_4;

BB6_6:
	bfe.u32 	%r19, %r3, 20, 11;
	add.s32 	%r20, %r19, -1012;
	shl.b64 	%rd9, %rd6, %r20;
	setp.eq.s64	%p13, %rd9, -9223372036854775808;
	selp.b32	%r21, %r2, 0, %p13;
	mov.u32 	%r22, 0;
	or.b32  	%r23, %r21, 2146435072;
	setp.lt.s32	%p14, %r3, 0;
	selp.b32	%r24, %r23, %r21, %p14;
	mov.b64 	%fd8, {%r22, %r24};
	bra.uni 	BB6_7;

BB6_4:
	@%p7 bra 	BB6_7;

	cvt.rzi.f64.f64	%fd15, %fd13;
	setp.neu.f64	%p12, %fd15, %fd13;
	selp.f64	%fd8, 0dFFF8000000000000, %fd8, %p12;

BB6_7:
	add.f64 	%fd21, %fd1, %fd13;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r25}, %fd21;
	}
	and.b32  	%r26, %r25, 2146435072;
	setp.ne.s32	%p15, %r26, 2146435072;
	@%p15 bra 	BB6_8;

	setp.gtu.f64	%p16, %fd2, 0d7FF0000000000000;
	@%p16 bra 	BB6_18;

	abs.f64 	%fd16, %fd13;
	setp.gtu.f64	%p17, %fd16, 0d7FF0000000000000;
	@%p17 bra 	BB6_18;

	and.b32  	%r27, %r3, 2147483647;
	setp.ne.s32	%p18, %r27, 2146435072;
	@%p18 bra 	BB6_13;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r28, %temp}, %fd13;
	}
	setp.eq.s32	%p19, %r28, 0;
	@%p19 bra 	BB6_17;

BB6_13:
	and.b32  	%r29, %r2, 2147483647;
	setp.ne.s32	%p20, %r29, 2146435072;
	@%p20 bra 	BB6_14;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r30, %temp}, %fd1;
	}
	setp.ne.s32	%p21, %r30, 0;
	mov.f64 	%fd21, %fd8;
	@%p21 bra 	BB6_18;

	shr.s32 	%r31, %r3, 31;
	and.b32  	%r32, %r31, -2146435072;
	add.s32 	%r33, %r32, 2146435072;
	or.b32  	%r34, %r33, -2147483648;
	selp.b32	%r35, %r34, %r33, %p1;
	mov.u32 	%r36, 0;
	mov.b64 	%fd21, {%r36, %r35};
	bra.uni 	BB6_18;

BB6_8:
	mov.f64 	%fd21, %fd8;

BB6_18:
	setp.eq.f64	%p25, %fd13, 0d0000000000000000;
	setp.eq.f64	%p26, %fd1, 0d3FF0000000000000;
	or.pred  	%p27, %p26, %p25;
	selp.f64	%fd17, 0d3FF0000000000000, %fd21, %p27;
	cvta.to.global.u64 	%rd10, %rd2;
	add.s64 	%rd12, %rd10, %rd4;
	mul.f64 	%fd18, %fd17, %fd14;
	st.global.f64 	[%rd12], %fd18;

BB6_19:
	ret;

BB6_14:
	mov.f64 	%fd21, %fd8;
	bra.uni 	BB6_18;

BB6_17:
	setp.gt.f64	%p22, %fd2, 0d3FF0000000000000;
	selp.b32	%r37, 2146435072, 0, %p22;
	mov.u32 	%r38, 0;
	xor.b32  	%r39, %r37, 2146435072;
	setp.lt.s32	%p23, %r3, 0;
	selp.b32	%r40, %r39, %r37, %p23;
	setp.eq.f64	%p24, %fd1, 0dBFF0000000000000;
	selp.b32	%r41, 1072693248, %r40, %p24;
	mov.b64 	%fd21, {%r38, %r41};
	bra.uni 	BB6_18;
}

	// .globl	_Z17subtractMatrixGPUPKdS0_Pdii
.visible .entry _Z17subtractMatrixGPUPKdS0_Pdii(
	.param .u64 _Z17subtractMatrixGPUPKdS0_Pdii_param_0,
	.param .u64 _Z17subtractMatrixGPUPKdS0_Pdii_param_1,
	.param .u64 _Z17subtractMatrixGPUPKdS0_Pdii_param_2,
	.param .u32 _Z17subtractMatrixGPUPKdS0_Pdii_param_3,
	.param .u32 _Z17subtractMatrixGPUPKdS0_Pdii_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z17subtractMatrixGPUPKdS0_Pdii_param_0];
	ld.param.u64 	%rd2, [_Z17subtractMatrixGPUPKdS0_Pdii_param_1];
	ld.param.u64 	%rd3, [_Z17subtractMatrixGPUPKdS0_Pdii_param_2];
	ld.param.u32 	%r2, [_Z17subtractMatrixGPUPKdS0_Pdii_param_3];
	ld.param.u32 	%r3, [_Z17subtractMatrixGPUPKdS0_Pdii_param_4];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mad.lo.s32 	%r1, %r11, %r2, %r7;
	setp.ge.u32	%p1, %r7, %r2;
	setp.ge.u32	%p2, %r11, %r3;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB7_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.u32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f64 	%fd1, [%rd8];
	ld.global.f64 	%fd2, [%rd6];
	sub.f64 	%fd3, %fd2, %fd1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f64 	[%rd10], %fd3;

BB7_2:
	ret;
}

	// .globl	_Z9reduceSumPdPKdd
.visible .entry _Z9reduceSumPdPKdd(
	.param .u64 _Z9reduceSumPdPKdd_param_0,
	.param .u64 _Z9reduceSumPdPKdd_param_1,
	.param .f64 _Z9reduceSumPdPKdd_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<17>;
	.reg .f64 	%fd<23>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd1, [_Z9reduceSumPdPKdd_param_0];
	ld.param.u64 	%rd2, [_Z9reduceSumPdPKdd_param_1];
	ld.param.f64 	%fd1, [_Z9reduceSumPdPKdd_param_2];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r8, %r1, 1;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r8, %r16, %r3;
	shl.b32 	%r9, %r3, 3;
	mov.u32 	%r10, sdata;
	add.s32 	%r5, %r10, %r9;
	mov.u64 	%rd3, 0;
	st.shared.u64 	[%r5], %rd3;
	cvt.rn.f64.u32	%fd2, %r4;
	setp.geu.f64	%p1, %fd2, %fd1;
	@%p1 bra 	BB8_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.u32 	%rd5, %r4, 8;
	add.s64 	%rd6, %rd4, %rd5;
	add.s32 	%r11, %r4, %r16;
	mul.wide.u32 	%rd7, %r11, 8;
	add.s64 	%rd8, %rd4, %rd7;
	ld.global.f64 	%fd3, [%rd8];
	ld.global.f64 	%fd4, [%rd6];
	add.f64 	%fd5, %fd4, %fd3;
	st.shared.f64 	[%r5], %fd5;

BB8_2:
	bar.sync 	0;
	setp.lt.u32	%p2, %r16, 66;
	@%p2 bra 	BB8_6;

BB8_3:
	shr.u32 	%r7, %r16, 1;
	setp.ge.u32	%p3, %r3, %r7;
	@%p3 bra 	BB8_5;

	add.s32 	%r12, %r7, %r3;
	shl.b32 	%r13, %r12, 3;
	add.s32 	%r15, %r10, %r13;
	ld.shared.f64 	%fd6, [%r5];
	ld.shared.f64 	%fd7, [%r15];
	add.f64 	%fd8, %fd7, %fd6;
	st.shared.f64 	[%r5], %fd8;

BB8_5:
	bar.sync 	0;
	setp.gt.u32	%p4, %r16, 131;
	mov.u32 	%r16, %r7;
	@%p4 bra 	BB8_3;

BB8_6:
	setp.gt.u32	%p5, %r3, 31;
	@%p5 bra 	BB8_8;

	ld.shared.f64 	%fd9, [%r5];
	ld.shared.f64 	%fd10, [%r5+256];
	add.f64 	%fd11, %fd10, %fd9;
	ld.shared.f64 	%fd12, [%r5+128];
	add.f64 	%fd13, %fd11, %fd12;
	ld.shared.f64 	%fd14, [%r5+64];
	add.f64 	%fd15, %fd13, %fd14;
	ld.shared.f64 	%fd16, [%r5+32];
	add.f64 	%fd17, %fd15, %fd16;
	ld.shared.f64 	%fd18, [%r5+16];
	add.f64 	%fd19, %fd17, %fd18;
	ld.shared.f64 	%fd20, [%r5+8];
	add.f64 	%fd21, %fd19, %fd20;
	st.shared.f64 	[%r5], %fd21;

BB8_8:
	setp.ne.s32	%p6, %r3, 0;
	@%p6 bra 	BB8_10;

	ld.shared.f64 	%fd22, [sdata];
	cvta.to.global.u64 	%rd9, %rd1;
	mul.wide.u32 	%rd10, %r1, 8;
	add.s64 	%rd11, %rd9, %rd10;
	st.global.f64 	[%rd11], %fd22;

BB8_10:
	ret;
}

	// .globl	_Z12reduceSmemV2PKdPdj
.visible .entry _Z12reduceSmemV2PKdPdj(
	.param .u64 _Z12reduceSmemV2PKdPdj_param_0,
	.param .u64 _Z12reduceSmemV2PKdPdj_param_1,
	.param .u32 _Z12reduceSmemV2PKdPdj_param_2
)
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<16>;
	.reg .f64 	%fd<42>;
	.reg .b64 	%rd<15>;
	// demoted variable
	.shared .align 8 .b8 _ZZ12reduceSmemV2PKdPdjE4smem[1024];

	ld.param.u64 	%rd1, [_Z12reduceSmemV2PKdPdj_param_0];
	ld.param.u64 	%rd2, [_Z12reduceSmemV2PKdPdj_param_1];
	ld.param.u32 	%r6, [_Z12reduceSmemV2PKdPdj_param_2];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r7, %r1, 2;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r7, %r2, %r3;
	shl.b32 	%r8, %r2, 2;
	add.s32 	%r9, %r4, %r8;
	setp.gt.u32	%p1, %r9, %r6;
	mov.f64 	%fd41, 0d0000000000000000;
	@%p1 bra 	BB9_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.u32 	%rd4, %r4, 8;
	add.s64 	%rd5, %rd3, %rd4;
	add.s32 	%r10, %r4, %r2;
	mul.wide.u32 	%rd6, %r10, 8;
	add.s64 	%rd7, %rd3, %rd6;
	shl.b32 	%r11, %r2, 1;
	add.s32 	%r12, %r4, %r11;
	mul.wide.u32 	%rd8, %r12, 8;
	add.s64 	%rd9, %rd3, %rd8;
	mad.lo.s32 	%r13, %r2, 3, %r4;
	mul.wide.u32 	%rd10, %r13, 8;
	add.s64 	%rd11, %rd3, %rd10;
	ld.global.f64 	%fd4, [%rd7];
	ld.global.f64 	%fd5, [%rd5];
	add.f64 	%fd6, %fd5, %fd4;
	ld.global.f64 	%fd7, [%rd9];
	add.f64 	%fd8, %fd6, %fd7;
	ld.global.f64 	%fd9, [%rd11];
	add.f64 	%fd41, %fd8, %fd9;

BB9_2:
	shl.b32 	%r14, %r3, 3;
	mov.u32 	%r15, _ZZ12reduceSmemV2PKdPdjE4smem;
	add.s32 	%r5, %r15, %r14;
	st.shared.f64 	[%r5], %fd41;
	bar.sync 	0;
	setp.gt.u32	%p2, %r3, 511;
	setp.lt.u32	%p3, %r2, 1024;
	or.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB9_4;

	ld.shared.f64 	%fd10, [%r5];
	ld.shared.f64 	%fd11, [%r5+4096];
	add.f64 	%fd12, %fd11, %fd10;
	st.shared.f64 	[%r5], %fd12;

BB9_4:
	bar.sync 	0;
	setp.gt.u32	%p5, %r3, 255;
	setp.lt.u32	%p6, %r2, 512;
	or.pred  	%p7, %p6, %p5;
	@%p7 bra 	BB9_6;

	ld.shared.f64 	%fd13, [%r5];
	ld.shared.f64 	%fd14, [%r5+2048];
	add.f64 	%fd15, %fd14, %fd13;
	st.shared.f64 	[%r5], %fd15;

BB9_6:
	bar.sync 	0;
	setp.gt.u32	%p8, %r3, 127;
	setp.lt.u32	%p9, %r2, 256;
	or.pred  	%p10, %p9, %p8;
	@%p10 bra 	BB9_8;

	ld.shared.f64 	%fd16, [%r5];
	ld.shared.f64 	%fd17, [%r5+1024];
	add.f64 	%fd18, %fd17, %fd16;
	st.shared.f64 	[%r5], %fd18;

BB9_8:
	bar.sync 	0;
	setp.gt.u32	%p11, %r3, 63;
	setp.lt.u32	%p12, %r2, 128;
	or.pred  	%p13, %p12, %p11;
	@%p13 bra 	BB9_10;

	ld.shared.f64 	%fd19, [%r5];
	ld.shared.f64 	%fd20, [%r5+512];
	add.f64 	%fd21, %fd20, %fd19;
	st.shared.f64 	[%r5], %fd21;

BB9_10:
	bar.sync 	0;
	setp.gt.u32	%p14, %r3, 31;
	@%p14 bra 	BB9_12;

	ld.volatile.shared.f64 	%fd22, [%r5];
	ld.volatile.shared.f64 	%fd23, [%r5+256];
	add.f64 	%fd24, %fd23, %fd22;
	st.volatile.shared.f64 	[%r5], %fd24;
	ld.volatile.shared.f64 	%fd25, [%r5];
	ld.volatile.shared.f64 	%fd26, [%r5+128];
	add.f64 	%fd27, %fd26, %fd25;
	st.volatile.shared.f64 	[%r5], %fd27;
	ld.volatile.shared.f64 	%fd28, [%r5];
	ld.volatile.shared.f64 	%fd29, [%r5+64];
	add.f64 	%fd30, %fd29, %fd28;
	st.volatile.shared.f64 	[%r5], %fd30;
	ld.volatile.shared.f64 	%fd31, [%r5];
	ld.volatile.shared.f64 	%fd32, [%r5+32];
	add.f64 	%fd33, %fd32, %fd31;
	st.volatile.shared.f64 	[%r5], %fd33;
	ld.volatile.shared.f64 	%fd34, [%r5];
	ld.volatile.shared.f64 	%fd35, [%r5+16];
	add.f64 	%fd36, %fd35, %fd34;
	st.volatile.shared.f64 	[%r5], %fd36;
	ld.volatile.shared.f64 	%fd37, [%r5];
	ld.volatile.shared.f64 	%fd38, [%r5+8];
	add.f64 	%fd39, %fd38, %fd37;
	st.volatile.shared.f64 	[%r5], %fd39;

BB9_12:
	setp.ne.s32	%p15, %r3, 0;
	@%p15 bra 	BB9_14;

	ld.shared.f64 	%fd40, [_ZZ12reduceSmemV2PKdPdjE4smem];
	cvta.to.global.u64 	%rd12, %rd2;
	mul.wide.u32 	%rd13, %r1, 8;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.f64 	[%rd14], %fd40;

BB9_14:
	ret;
}

	// .globl	_Z15MatrixMulKernelPdS_S_i
.visible .entry _Z15MatrixMulKernelPdS_S_i(
	.param .u64 _Z15MatrixMulKernelPdS_S_i_param_0,
	.param .u64 _Z15MatrixMulKernelPdS_S_i_param_1,
	.param .u64 _Z15MatrixMulKernelPdS_S_i_param_2,
	.param .u32 _Z15MatrixMulKernelPdS_S_i_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<38>;
	.reg .f64 	%fd<105>;
	.reg .b64 	%rd<13>;
	// demoted variable
	.shared .align 8 .b8 _ZZ15MatrixMulKernelPdS_S_iE3Mds[8192];
	// demoted variable
	.shared .align 8 .b8 _ZZ15MatrixMulKernelPdS_S_iE3Nds[8192];

	ld.param.u64 	%rd3, [_Z15MatrixMulKernelPdS_S_i_param_0];
	ld.param.u64 	%rd4, [_Z15MatrixMulKernelPdS_S_i_param_1];
	ld.param.u64 	%rd5, [_Z15MatrixMulKernelPdS_S_i_param_2];
	ld.param.u32 	%r19, [_Z15MatrixMulKernelPdS_S_i_param_3];
	mov.u32 	%r1, %ctaid.y;
	mov.u32 	%r2, %tid.y;
	mov.u32 	%r20, %ctaid.x;
	shl.b32 	%r21, %r20, 5;
	mov.u32 	%r3, %tid.x;
	add.s32 	%r4, %r3, %r21;
	mov.f64 	%fd104, 0d0000000000000000;
	setp.lt.s32	%p1, %r19, 32;
	@%p1 bra 	BB10_3;

	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd3;
	shl.b32 	%r23, %r2, 8;
	mov.u32 	%r24, _ZZ15MatrixMulKernelPdS_S_iE3Mds;
	add.s32 	%r7, %r24, %r23;
	shl.b32 	%r25, %r3, 3;
	add.s32 	%r5, %r7, %r25;
	mov.u32 	%r26, _ZZ15MatrixMulKernelPdS_S_iE3Nds;
	add.s32 	%r27, %r26, %r23;
	add.s32 	%r6, %r27, %r25;
	add.s32 	%r8, %r26, %r25;
	mad.lo.s32 	%r28, %r1, 32, %r2;
	mad.lo.s32 	%r36, %r19, %r28, %r3;
	mad.lo.s32 	%r35, %r2, %r19, %r4;
	shl.b32 	%r11, %r19, 5;
	shr.s32 	%r29, %r19, 31;
	shr.u32 	%r30, %r29, 27;
	add.s32 	%r31, %r19, %r30;
	shr.s32 	%r12, %r31, 5;
	mov.f64 	%fd104, 0d0000000000000000;
	mov.u32 	%r37, 0;

BB10_2:
	mul.wide.s32 	%rd6, %r36, 8;
	add.s64 	%rd7, %rd2, %rd6;
	ld.global.f64 	%fd6, [%rd7];
	st.shared.f64 	[%r5], %fd6;
	mul.wide.s32 	%rd8, %r35, 8;
	add.s64 	%rd9, %rd1, %rd8;
	ld.global.f64 	%fd7, [%rd9];
	st.shared.f64 	[%r6], %fd7;
	bar.sync 	0;
	ld.shared.f64 	%fd8, [%r8];
	ld.shared.f64 	%fd9, [%r7];
	fma.rn.f64 	%fd10, %fd9, %fd8, %fd104;
	ld.shared.f64 	%fd11, [%r8+256];
	ld.shared.f64 	%fd12, [%r7+8];
	fma.rn.f64 	%fd13, %fd12, %fd11, %fd10;
	ld.shared.f64 	%fd14, [%r8+512];
	ld.shared.f64 	%fd15, [%r7+16];
	fma.rn.f64 	%fd16, %fd15, %fd14, %fd13;
	ld.shared.f64 	%fd17, [%r8+768];
	ld.shared.f64 	%fd18, [%r7+24];
	fma.rn.f64 	%fd19, %fd18, %fd17, %fd16;
	ld.shared.f64 	%fd20, [%r8+1024];
	ld.shared.f64 	%fd21, [%r7+32];
	fma.rn.f64 	%fd22, %fd21, %fd20, %fd19;
	ld.shared.f64 	%fd23, [%r8+1280];
	ld.shared.f64 	%fd24, [%r7+40];
	fma.rn.f64 	%fd25, %fd24, %fd23, %fd22;
	ld.shared.f64 	%fd26, [%r8+1536];
	ld.shared.f64 	%fd27, [%r7+48];
	fma.rn.f64 	%fd28, %fd27, %fd26, %fd25;
	ld.shared.f64 	%fd29, [%r8+1792];
	ld.shared.f64 	%fd30, [%r7+56];
	fma.rn.f64 	%fd31, %fd30, %fd29, %fd28;
	ld.shared.f64 	%fd32, [%r8+2048];
	ld.shared.f64 	%fd33, [%r7+64];
	fma.rn.f64 	%fd34, %fd33, %fd32, %fd31;
	ld.shared.f64 	%fd35, [%r8+2304];
	ld.shared.f64 	%fd36, [%r7+72];
	fma.rn.f64 	%fd37, %fd36, %fd35, %fd34;
	ld.shared.f64 	%fd38, [%r8+2560];
	ld.shared.f64 	%fd39, [%r7+80];
	fma.rn.f64 	%fd40, %fd39, %fd38, %fd37;
	ld.shared.f64 	%fd41, [%r8+2816];
	ld.shared.f64 	%fd42, [%r7+88];
	fma.rn.f64 	%fd43, %fd42, %fd41, %fd40;
	ld.shared.f64 	%fd44, [%r8+3072];
	ld.shared.f64 	%fd45, [%r7+96];
	fma.rn.f64 	%fd46, %fd45, %fd44, %fd43;
	ld.shared.f64 	%fd47, [%r8+3328];
	ld.shared.f64 	%fd48, [%r7+104];
	fma.rn.f64 	%fd49, %fd48, %fd47, %fd46;
	ld.shared.f64 	%fd50, [%r8+3584];
	ld.shared.f64 	%fd51, [%r7+112];
	fma.rn.f64 	%fd52, %fd51, %fd50, %fd49;
	ld.shared.f64 	%fd53, [%r8+3840];
	ld.shared.f64 	%fd54, [%r7+120];
	fma.rn.f64 	%fd55, %fd54, %fd53, %fd52;
	ld.shared.f64 	%fd56, [%r8+4096];
	ld.shared.f64 	%fd57, [%r7+128];
	fma.rn.f64 	%fd58, %fd57, %fd56, %fd55;
	ld.shared.f64 	%fd59, [%r8+4352];
	ld.shared.f64 	%fd60, [%r7+136];
	fma.rn.f64 	%fd61, %fd60, %fd59, %fd58;
	ld.shared.f64 	%fd62, [%r8+4608];
	ld.shared.f64 	%fd63, [%r7+144];
	fma.rn.f64 	%fd64, %fd63, %fd62, %fd61;
	ld.shared.f64 	%fd65, [%r8+4864];
	ld.shared.f64 	%fd66, [%r7+152];
	fma.rn.f64 	%fd67, %fd66, %fd65, %fd64;
	ld.shared.f64 	%fd68, [%r8+5120];
	ld.shared.f64 	%fd69, [%r7+160];
	fma.rn.f64 	%fd70, %fd69, %fd68, %fd67;
	ld.shared.f64 	%fd71, [%r8+5376];
	ld.shared.f64 	%fd72, [%r7+168];
	fma.rn.f64 	%fd73, %fd72, %fd71, %fd70;
	ld.shared.f64 	%fd74, [%r8+5632];
	ld.shared.f64 	%fd75, [%r7+176];
	fma.rn.f64 	%fd76, %fd75, %fd74, %fd73;
	ld.shared.f64 	%fd77, [%r8+5888];
	ld.shared.f64 	%fd78, [%r7+184];
	fma.rn.f64 	%fd79, %fd78, %fd77, %fd76;
	ld.shared.f64 	%fd80, [%r8+6144];
	ld.shared.f64 	%fd81, [%r7+192];
	fma.rn.f64 	%fd82, %fd81, %fd80, %fd79;
	ld.shared.f64 	%fd83, [%r8+6400];
	ld.shared.f64 	%fd84, [%r7+200];
	fma.rn.f64 	%fd85, %fd84, %fd83, %fd82;
	ld.shared.f64 	%fd86, [%r8+6656];
	ld.shared.f64 	%fd87, [%r7+208];
	fma.rn.f64 	%fd88, %fd87, %fd86, %fd85;
	ld.shared.f64 	%fd89, [%r8+6912];
	ld.shared.f64 	%fd90, [%r7+216];
	fma.rn.f64 	%fd91, %fd90, %fd89, %fd88;
	ld.shared.f64 	%fd92, [%r8+7168];
	ld.shared.f64 	%fd93, [%r7+224];
	fma.rn.f64 	%fd94, %fd93, %fd92, %fd91;
	ld.shared.f64 	%fd95, [%r8+7424];
	ld.shared.f64 	%fd96, [%r7+232];
	fma.rn.f64 	%fd97, %fd96, %fd95, %fd94;
	ld.shared.f64 	%fd98, [%r8+7680];
	ld.shared.f64 	%fd99, [%r7+240];
	fma.rn.f64 	%fd100, %fd99, %fd98, %fd97;
	ld.shared.f64 	%fd101, [%r8+7936];
	ld.shared.f64 	%fd102, [%r7+248];
	fma.rn.f64 	%fd104, %fd102, %fd101, %fd100;
	bar.sync 	0;
	add.s32 	%r36, %r36, 32;
	add.s32 	%r35, %r35, %r11;
	add.s32 	%r37, %r37, 1;
	setp.lt.s32	%p2, %r37, %r12;
	@%p2 bra 	BB10_2;

BB10_3:
	cvta.to.global.u64 	%rd10, %rd5;
	shl.b32 	%r32, %r1, 5;
	add.s32 	%r33, %r2, %r32;
	mad.lo.s32 	%r34, %r33, %r19, %r4;
	mul.wide.s32 	%rd11, %r34, 8;
	add.s64 	%rd12, %rd10, %rd11;
	st.global.f64 	[%rd12], %fd104;
	ret;
}

	// .globl	_Z22pointDivisionMatrixGPUPKdS0_Pdii
.visible .entry _Z22pointDivisionMatrixGPUPKdS0_Pdii(
	.param .u64 _Z22pointDivisionMatrixGPUPKdS0_Pdii_param_0,
	.param .u64 _Z22pointDivisionMatrixGPUPKdS0_Pdii_param_1,
	.param .u64 _Z22pointDivisionMatrixGPUPKdS0_Pdii_param_2,
	.param .u32 _Z22pointDivisionMatrixGPUPKdS0_Pdii_param_3,
	.param .u32 _Z22pointDivisionMatrixGPUPKdS0_Pdii_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z22pointDivisionMatrixGPUPKdS0_Pdii_param_0];
	ld.param.u64 	%rd2, [_Z22pointDivisionMatrixGPUPKdS0_Pdii_param_1];
	ld.param.u64 	%rd3, [_Z22pointDivisionMatrixGPUPKdS0_Pdii_param_2];
	ld.param.u32 	%r2, [_Z22pointDivisionMatrixGPUPKdS0_Pdii_param_3];
	ld.param.u32 	%r3, [_Z22pointDivisionMatrixGPUPKdS0_Pdii_param_4];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mad.lo.s32 	%r1, %r11, %r2, %r7;
	setp.ge.u32	%p1, %r7, %r2;
	setp.ge.u32	%p2, %r11, %r3;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB11_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.u32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f64 	%fd1, [%rd8];
	ld.global.f64 	%fd2, [%rd6];
	div.rn.f64 	%fd3, %fd2, %fd1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f64 	[%rd10], %fd3;

BB11_2:
	ret;
}

	// .globl	_Z20pointSquareMatrixGPUPKdPdii
.visible .entry _Z20pointSquareMatrixGPUPKdPdii(
	.param .u64 _Z20pointSquareMatrixGPUPKdPdii_param_0,
	.param .u64 _Z20pointSquareMatrixGPUPKdPdii_param_1,
	.param .u32 _Z20pointSquareMatrixGPUPKdPdii_param_2,
	.param .u32 _Z20pointSquareMatrixGPUPKdPdii_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [_Z20pointSquareMatrixGPUPKdPdii_param_0];
	ld.param.u64 	%rd2, [_Z20pointSquareMatrixGPUPKdPdii_param_1];
	ld.param.u32 	%r2, [_Z20pointSquareMatrixGPUPKdPdii_param_2];
	ld.param.u32 	%r3, [_Z20pointSquareMatrixGPUPKdPdii_param_3];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mad.lo.s32 	%r1, %r11, %r2, %r7;
	setp.ge.u32	%p1, %r7, %r2;
	setp.ge.u32	%p2, %r11, %r3;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB12_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.u32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	mul.f64 	%fd2, %fd1, %fd1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f64 	[%rd7], %fd2;

BB12_2:
	ret;
}

.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<138>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	ld.param.f64 	%fd13, [__internal_accurate_pow_param_1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd12;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32	%p1, %r51, 0;
	@%p1 bra 	BB13_2;

	mul.f64 	%fd14, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd14;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd14;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

BB13_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd135, {%r49, %r18};
	setp.lt.u32	%p2, %r18, 1073127583;
	@%p2 bra 	BB13_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd135;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd135;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd135, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

BB13_4:
	add.f64 	%fd15, %fd135, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd16, %fd15;
	neg.f64 	%fd17, %fd15;
	mov.f64 	%fd18, 0d3FF0000000000000;
	fma.rn.f64 	%fd19, %fd17, %fd16, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd19, %fd19;
	fma.rn.f64 	%fd21, %fd20, %fd16, %fd16;
	add.f64 	%fd22, %fd135, 0dBFF0000000000000;
	mul.f64 	%fd23, %fd22, %fd21;
	fma.rn.f64 	%fd24, %fd22, %fd21, %fd23;
	mul.f64 	%fd25, %fd24, %fd24;
	mov.f64 	%fd26, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd27, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd28, %fd27, %fd25, %fd26;
	mov.f64 	%fd29, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd30, %fd28, %fd25, %fd29;
	mov.f64 	%fd31, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd32, %fd30, %fd25, %fd31;
	mov.f64 	%fd33, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd34, %fd32, %fd25, %fd33;
	mov.f64 	%fd35, 0d3F6249249242B910;
	fma.rn.f64 	%fd36, %fd34, %fd25, %fd35;
	mov.f64 	%fd37, 0d3F89999999999DFB;
	fma.rn.f64 	%fd38, %fd36, %fd25, %fd37;
	sub.f64 	%fd39, %fd22, %fd24;
	add.f64 	%fd40, %fd39, %fd39;
	neg.f64 	%fd41, %fd24;
	fma.rn.f64 	%fd42, %fd41, %fd22, %fd40;
	mul.f64 	%fd43, %fd21, %fd42;
	fma.rn.f64 	%fd44, %fd25, %fd38, 0d3FB5555555555555;
	mov.f64 	%fd45, 0d3FB5555555555555;
	sub.f64 	%fd46, %fd45, %fd44;
	fma.rn.f64 	%fd47, %fd25, %fd38, %fd46;
	add.f64 	%fd48, %fd47, 0d0000000000000000;
	add.f64 	%fd49, %fd48, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd50, %fd44, %fd49;
	sub.f64 	%fd51, %fd44, %fd50;
	add.f64 	%fd52, %fd49, %fd51;
	mul.rn.f64 	%fd53, %fd24, %fd24;
	neg.f64 	%fd54, %fd53;
	fma.rn.f64 	%fd55, %fd24, %fd24, %fd54;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd43;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd43;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd56, {%r22, %r24};
	fma.rn.f64 	%fd57, %fd24, %fd56, %fd55;
	mul.rn.f64 	%fd58, %fd53, %fd24;
	neg.f64 	%fd59, %fd58;
	fma.rn.f64 	%fd60, %fd53, %fd24, %fd59;
	fma.rn.f64 	%fd61, %fd53, %fd43, %fd60;
	fma.rn.f64 	%fd62, %fd57, %fd24, %fd61;
	mul.rn.f64 	%fd63, %fd50, %fd58;
	neg.f64 	%fd64, %fd63;
	fma.rn.f64 	%fd65, %fd50, %fd58, %fd64;
	fma.rn.f64 	%fd66, %fd50, %fd62, %fd65;
	fma.rn.f64 	%fd67, %fd52, %fd58, %fd66;
	add.f64 	%fd68, %fd63, %fd67;
	sub.f64 	%fd69, %fd63, %fd68;
	add.f64 	%fd70, %fd67, %fd69;
	add.f64 	%fd71, %fd24, %fd68;
	sub.f64 	%fd72, %fd24, %fd71;
	add.f64 	%fd73, %fd68, %fd72;
	add.f64 	%fd74, %fd70, %fd73;
	add.f64 	%fd75, %fd43, %fd74;
	add.f64 	%fd76, %fd71, %fd75;
	sub.f64 	%fd77, %fd71, %fd76;
	add.f64 	%fd78, %fd75, %fd77;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, -2147483648;
	mov.u32 	%r27, 1127219200;
	mov.b64 	%fd79, {%r25, %r27};
	mov.b64 	%fd80, {%r26, %r27};
	sub.f64 	%fd81, %fd79, %fd80;
	mov.f64 	%fd82, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd83, %fd81, %fd82, %fd76;
	neg.f64 	%fd84, %fd81;
	fma.rn.f64 	%fd85, %fd84, %fd82, %fd83;
	sub.f64 	%fd86, %fd85, %fd76;
	sub.f64 	%fd87, %fd78, %fd86;
	mov.f64 	%fd88, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd89, %fd81, %fd88, %fd87;
	add.f64 	%fd90, %fd83, %fd89;
	sub.f64 	%fd91, %fd83, %fd90;
	add.f64 	%fd92, %fd89, %fd91;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd13;
	}
	add.s32 	%r29, %r28, %r28;
	setp.gt.u32	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd13;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd90, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd90, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd92, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd18;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd18;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd136, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	 %f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32	%p4, %f1, 0f4086232B;
	@%p4 bra 	BB13_7;

	setp.lt.f64	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64	%fd136, 0d0000000000000000, %fd129, %p5;
	setp.geu.f32	%p6, %f1, 0f40874800;
	@%p6 bra 	BB13_7;

	mov.f64 	%fd134, 0d4338000000000000;
	mov.f64 	%fd133, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd132, %fd4, %fd133, %fd134;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd132;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r39, %r15;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd136, %fd130, %fd131;

BB13_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd136;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.ne.s32	%p7, %r46, 2146435072;
	@%p7 bra 	BB13_9;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd136;
	}
	setp.eq.s32	%p8, %r47, 0;
	@%p8 bra 	BB13_10;

BB13_9:
	fma.rn.f64 	%fd136, %fd136, %fd5, %fd136;

BB13_10:
	st.param.f64	[func_retval0+0], %fd136;
	ret;
}


